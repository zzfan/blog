<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>赵志凡'Blog</title><link href="http://blog.zzfan.info/" rel="alternate"></link><link href="http://blog.zzfan.info/feeds/tools.atom.xml" rel="self"></link><id>http://blog.zzfan.info/</id><updated>2015-05-02T00:00:00+08:00</updated><entry><title>Git的用法和遇到的问题</title><link href="http://blog.zzfan.info/gitde-yong-fa-he-yu-dao-de-wen-ti.html" rel="alternate"></link><updated>2015-05-02T00:00:00+08:00</updated><author><name>zzfan</name></author><id>tag:blog.zzfan.info,2015-05-02:gitde-yong-fa-he-yu-dao-de-wen-ti.html</id><summary type="html">&lt;p&gt;Git的用法其实很简单，首先你得注册一个Github的账户，一般要在你的Github上创建一个repo。
那么git就有用武之地了，下面我们来介绍下具体的步骤以及注意的事项。&lt;/p&gt;
&lt;h3&gt;经验之谈&lt;/h3&gt;
&lt;p&gt;就我经常用到的git步骤如下：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;
git add .&lt;br /&gt;
git commit -m "你更改的描述" &lt;br /&gt;
git push &lt;br /&gt;
&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;其实配置好了后就是这么简单，有时候在不同机器上会用到&lt;em&gt;git pull、git add --all&lt;/em&gt;...,但是百度一下你就会了，而且git的提示功能是很Bug的一个存在，任何错误都会提醒你用什么命令，所以不用担心出现错误了。&lt;/p&gt;
&lt;p&gt;&lt;font size=4 color="#FF0000"&gt; 有一点需要注意的是，有时候可能需要在git前面加&lt;strong&gt;sudo&lt;/strong&gt;，这个你懂的。&lt;/font&gt;
&lt;p&gt;
    &lt;span style="background-color:#CCCCCC;"&gt;错误处理（碰到了就更新），&lt;/span&gt;&lt;span style="line-height:1.5;background-color:#CCCCCC;"&gt;&amp;nbsp;由于以前碰到的都忘了，现在有一条说一条吧：&lt;/span&gt; 
&lt;/p&gt;
&lt;p&gt;
    &lt;span style="line-height:1.5;background-color:#CCCCCC;"&gt;&amp;nbsp; &amp;nbsp; 1.&amp;nbsp;fatal: the remote end hung up unexpectedly&lt;/span&gt;&lt;span style="line-height:1.5;"&gt;&lt;/span&gt; 
&lt;/p&gt;
&lt;p&gt;
    &lt;span style="line-height:1.5;"&gt;&lt;span style="background-color:#CCCCCC;"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp; 经常用git的这个错误可能会经常出现，其实可以永久解决的，但是有了简单的方法后我也酒懒得去看了。&lt;/span&gt;&lt;br /&gt;
&lt;/span&gt; 
&lt;/p&gt;
&lt;p&gt;
    &lt;span style="line-height:1.5;"&gt;&lt;span style="background-color:#CCCCCC;"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp; git config&amp;nbsp;http.postBuffer 524288000&lt;/span&gt;&lt;br /&gt;
&lt;/span&gt; 
&lt;/p&gt;
&lt;p&gt;
    &lt;br /&gt;
&lt;/p&gt;&lt;/p&gt;
&lt;h3&gt;具体步骤&lt;/h3&gt;
&lt;h3&gt;初始配置&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;配置git&lt;/strong&gt;: 刚申请git的时候，必须按如下设置配置&lt;em&gt;username&lt;/em&gt;和&lt;em&gt;useremail&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;
git config --global user.name "you name"&lt;br /&gt;
git config --global user.email you@yourdomain.example.com &lt;br /&gt;
git config --global push.default simple(可以有其他选项) &lt;br /&gt;
&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;安装ssh公钥&lt;/strong&gt;: 用你在注册github时用的Email生成一个ssh公钥对&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;
ssh-keygen -t rsa -C "your_email@example.com"
&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;
Enter passphrase (empty for no passphrase): 输入你在github上注册使用的密码     &lt;br /&gt;
Enter same passphrase again: 再输入一次
&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;然后会看到公钥和私钥分别被保存为&lt;code&gt;id_rsa&lt;/code&gt;和&lt;code&gt;id_rsa.pub&lt;/code&gt;，然后正是我们需要的。打开github网页，在账户设置&lt;code&gt;(Account settings)&lt;/code&gt;中找到&lt;em&gt;SSH keys&lt;/em&gt;项目，点击添加SSH key&lt;code&gt;(Add SSH key)&lt;/code&gt;，把&lt;code&gt;idrsa.pub&lt;/code&gt;中的内容复制到网页中的key里面。最后回到终端测试下：  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="o"&gt;~&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="n"&gt;ssh&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt; &lt;span class="n"&gt;git&lt;/span&gt;&lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="n"&gt;github&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;看到这个内容的时候，就说明成功了，git配置完毕:&lt;br /&gt;
&lt;span style="color:#E56600;font-family:'Open Sans', HelveticaNeue-Light, 'Helvetica Neue Light', 'Helvetica Neue', Helvetica, Arial, sans-serif;font-size:14px;line-height:19.9999809265137px;background-color:#FFFFFF;"&gt;The authenticity of host 'github.com (204.232.175.90)' can't be established.&lt;/span&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;span style="color:#E56600;font-family:'Open Sans', HelveticaNeue-Light, 'Helvetica Neue Light', 'Helvetica Neue', Helvetica, Arial, sans-serif;font-size:14px;line-height:19.9999809265137px;background-color:#FFFFFF;"&gt;RSA key fingerprint is 16:27:ac:a5:76:28:2d:36:63:1b:56:4d:eb:df:a6:48.&lt;/span&gt;&lt;br /&gt;
&lt;span style="color:#E56600;background-color:#FFFFFF;"&gt;&lt;/span&gt;&lt;br /&gt;
&lt;span style="color:#E56600;font-family:'Open Sans', HelveticaNeue-Light, 'Helvetica Neue Light', 'Helvetica Neue', Helvetica, Arial, sans-serif;font-size:14px;line-height:19.9999809265137px;background-color:#FFFFFF;"&gt;Are you sure you want to continue connecting (yes/no)?&lt;/span&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;span style="color:#E56600;font-family:'Open Sans', HelveticaNeue-Light, 'Helvetica Neue Light', 'Helvetica Neue', Helvetica, Arial, sans-serif;font-size:14px;line-height:19.9999809265137px;background-color:#FFFFFF;"&gt;Hi&amp;nbsp;&lt;/span&gt;&lt;em&gt;&lt;span style="color:#E56600;background-color:#FFFFFF;"&gt;username&lt;/span&gt;&lt;/em&gt;&lt;span style="color:#E56600;font-family:'Open Sans', HelveticaNeue-Light, 'Helvetica Neue Light', 'Helvetica Neue', Helvetica, Arial, sans-serif;font-size:14px;line-height:19.9999809265137px;background-color:#FFFFFF;"&gt;! You've successfully authenticated, but GitHub does not provide shell access.&lt;/span&gt;&lt;/p&gt;
&lt;h3&gt;Git命令&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;git init &lt;/li&gt;
&lt;li&gt;git add &lt;/li&gt;
&lt;li&gt;git rm &lt;/li&gt;
&lt;li&gt;git commit&lt;br /&gt;
    git commit -m ""  &lt;/li&gt;
&lt;li&gt;git status&lt;br /&gt;
    查看版本库的状态。&lt;/li&gt;
&lt;li&gt;git log&lt;br /&gt;
    查看历史日志，包含每次版本变化。每次版本变化对应一个commit id。&lt;/li&gt;
&lt;li&gt;git merge&lt;br /&gt;
    把服务器上下载来的代码和本地代码合并，或者进行分支合并：&lt;br /&gt;
    git merge repo/git-pages (是将服务器git库的git-pages分支合并到本地分支上)&lt;/li&gt;
&lt;li&gt;git diff&lt;br /&gt;
    比较两个分支：git diff 分支1 分支2 &lt;/li&gt;
&lt;li&gt;git checkout&lt;br /&gt;
    切换分支： git checkout 分支名&lt;/li&gt;
&lt;li&gt;git branch&lt;br /&gt;
    创建分支： git branch 分支名&lt;br /&gt;
    创建分支并且切换到创建的分支： git branch -b 分支名&lt;br /&gt;
    删除分支： git branch -D 分支名&lt;br /&gt;
    列出本地git库中的所有分支： git branch&lt;/li&gt;
&lt;/ul&gt;</summary><category term="git"></category><category term="github"></category></entry><entry><title>在Github上搭建自己的Blog：Octopress+Python+Markdown和Html</title><link href="http://blog.zzfan.info/zai-githubshang-da-jian-zi-ji-de-blogoctopresspythonmarkdownhe-html.html" rel="alternate"></link><updated>2015-04-29T00:00:00+08:00</updated><author><name>zzfan</name></author><id>tag:blog.zzfan.info,2015-04-29:zai-githubshang-da-jian-zi-ji-de-blogoctopresspythonmarkdownhe-html.html</id><summary type="html">&lt;h2&gt;概述&lt;/h2&gt;
&lt;p&gt;从自己搭建Blog有一段时间了，其实为了方便我的Blog大部分都是从&lt;a href="http://github.com"&gt;Github&lt;/a&gt;上荡下来的，有些地方没有著名版权，敬请谅解。&lt;/p&gt;
&lt;p&gt;动态的Blog我也弄过一段时间，是用&lt;strong&gt;node.js&lt;/strong&gt;开发的，当时也是由于没有找到合适的免费&lt;strong&gt;VPS&lt;/strong&gt;（用过一段时间的&lt;a href="https://www.digitalocean.com/"&gt;DigitalOcean&lt;/a&gt;，也就没有继续下去了（对于学生来说还是有点贵的）。如果有需要，可以关注我的&lt;a href="http://github.com/zzfan"&gt;Github&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;经过一段时间的摸索，完成了我的Github Page: &lt;a href="http://blog.zzfan.info"&gt;http://blog.zzfan.info&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;其实这个&lt;a href="http://www.xuanfengge.com"&gt;轩枫阁&lt;/a&gt;才是我一直想要搭建的Blog（很喜欢那种自己开发的可以不断自己的完善，而且有无限大的开发空间），但是我的方向不再网页开发，只能忍痛不去想那绚丽的让人眼花缭乱的Blog了&lt;img src="http://kindeditor.net/ke4/plugins/emoticons/images/0.gif" border="0" alt="" /&gt;&lt;/p&gt;
&lt;h2&gt;具体搭建&lt;/h2&gt;
&lt;p&gt;这里我就不很详细的列举出其中的细节了，直接上命令，是在Linux上搭建的。&lt;/p&gt;
&lt;h4&gt;- 安装软件&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;sudo apt-get install python python-dev python-pip&lt;br /&gt;
sudo apt-get install pelican Markdown&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;- 创建工作文件&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;mkdir pelican-blog&lt;br /&gt;
cd pelican-blog&lt;br /&gt;
pelican-quickstart  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;p&gt;
    &lt;span style="font-size:9px;color:#E56600;"&gt;&amp;gt; Where do you want to create your new web site? [.]&lt;/span&gt;&lt;br /&gt;
&lt;span style="font-size:9px;color:#E56600;"&gt;&amp;gt; What will be the title of this web site? 赵志凡'Blog&lt;/span&gt;&lt;br /&gt;
&lt;span style="font-size:9px;color:#E56600;"&gt;&amp;gt; Who will be the author of this web site? zzfan&lt;/span&gt;&lt;br /&gt;
&lt;span style="font-size:9px;color:#E56600;"&gt;&amp;gt; What will be the default language of this web site? [en] zh&lt;/span&gt;&lt;br /&gt;
&lt;span style="font-size:9px;color:#E56600;"&gt;&amp;gt; Do you want to specify a URL prefix? e.g., http://example.com &amp;nbsp; (Y/n)&lt;/span&gt;&lt;br /&gt;
&lt;span style="font-size:9px;color:#E56600;"&gt;&amp;gt; What is your URL prefix? (see above example; no trailing slash) http://blog.zzfan.info&lt;/span&gt;&lt;br /&gt;
&lt;span style="font-size:9px;color:#E56600;"&gt;&amp;gt; Do you want to enable article pagination? (Y/n)&lt;/span&gt;&lt;br /&gt;
&lt;span style="font-size:9px;color:#E56600;"&gt;&amp;gt; How many articles per page do you want? [10]&lt;/span&gt;&lt;br /&gt;
&lt;span style="font-size:9px;color:#E56600;"&gt;&amp;gt; Do you want to generate a Fabfile/Makefile to automate generation and publishing? (Y/n)&lt;/span&gt;&lt;br /&gt;
&lt;span style="font-size:9px;color:#E56600;"&gt;&amp;gt; Do you want an auto-reload &amp;amp; simpleHTTP script to assist with theme and site development? (Y/n)&lt;/span&gt;&lt;br /&gt;
&lt;span style="font-size:9px;color:#E56600;"&gt;&amp;gt; Do you want to upload your website using FTP? (y/N)&lt;/span&gt;&lt;br /&gt;
&lt;span style="font-size:9px;color:#E56600;"&gt;&amp;gt; Do you want to upload your website using SSH? (y/N)&lt;/span&gt;&lt;br /&gt;
&lt;span style="font-size:9px;color:#E56600;"&gt;&amp;gt; Do you want to upload your website using Dropbox? (y/N)&lt;/span&gt;&lt;br /&gt;
&lt;span style="font-size:9px;color:#E56600;"&gt;&amp;gt; Do you want to upload your website using S3? (y/N)&lt;/span&gt;&lt;br /&gt;
&lt;span style="font-size:9px;color:#E56600;"&gt;&amp;gt; Do you want to upload your website using Rackspace Cloud Files? (y/N)&lt;/span&gt;&lt;br /&gt;
&lt;span style="font-size:9px;color:#E56600;"&gt;&amp;gt; Do you want to upload your website using GitHub Pages? (y/N) Y&lt;/span&gt;&lt;br /&gt;
&lt;span style="font-size:9px;color:#E56600;"&gt;&amp;gt; Is this your personal page (username.github.io)? (y/N) Y&lt;/span&gt;&lt;br /&gt;
&lt;/p&gt; &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;h4&gt;- 配置文件&lt;/h4&gt;
&lt;p&gt;经过上面的步骤，在&lt;code&gt;blog&lt;/code&gt;文件夹里面会多出几个Pelican生成的文件，其中&lt;code&gt;pelicanconf.py&lt;/code&gt;就是配置文件&lt;br /&gt;
为了方便，你可以把所有你需要操作的文件复制到这个文件夹里面，当作你Blog的操作文件夹。
首先你得在你的Github上创建一个Blog的repo，没有必要&lt;code&gt;repo&lt;/code&gt;名字是"name.github.io",如果你非要把这个作为名字的话，我也不反对。然后如下：&lt;br /&gt;
&lt;code&gt;
cd blog&lt;br /&gt;
git clone http://github.com/zzfan/blog&lt;br /&gt;
cd blog&lt;br /&gt;
git chckout gh-pages&lt;br /&gt;
&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;在这里需要说明的是在Github上创建&lt;code&gt;repo&lt;/code&gt;的时候也不要使用&lt;code&gt;Automatic Page Generator&lt;/code&gt;,因为没有这个必要，我们用不到（如果你想要用这个创建Blog的话其实很简单，具体的Github有给你很多模板）&lt;br /&gt;
然后就是对&lt;strong&gt;pelican&lt;/strong&gt;的配置，具体的自己摸索，我的配置文件如下：  &lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;#!/usr/bin/env python&lt;/span&gt;
&lt;span class="c"&gt;# -*- coding: utf-8 -*- #&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;__future__&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;unicode_literals&lt;/span&gt;

&lt;span class="n"&gt;AUTHOR&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;u&amp;#39;zzfan&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;AUTHOR_EMAIL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;u&amp;#39;zzfan@mail.ustc.edu.cn&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;SITENAME&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;u&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\u8d75\u5fd7\u51e1&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;Blog&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;SITEURL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;http://blog.zzfan.info&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;DEFAULT_DATE_FORMAT&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;%Y-%m-&lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;TIMEZONE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;Asia/Shanghai&amp;#39;&lt;/span&gt;

&lt;span class="n"&gt;DEFAULT_LANG&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;u&amp;#39;zh&amp;#39;&lt;/span&gt;

&lt;span class="n"&gt;STATIC_PATHS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;images&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;wendang&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;SEARCH_BOX&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;

&lt;span class="c"&gt;# Feed generation is usually not desired when developing&lt;/span&gt;
&lt;span class="c"&gt;#FEED_DOMAIN = SITEURL&lt;/span&gt;
&lt;span class="c"&gt;#FEED_ALL_ATOM = &amp;#39;feeds/all.atom.xml&amp;#39;&lt;/span&gt;
&lt;span class="c"&gt;#CATEGORY_FEED_ATOM = &amp;#39;feeds/%s.atom.xml&amp;#39;&lt;/span&gt;

&lt;span class="c"&gt;#FEED_ALL_RSS = &amp;#39;feeds/all.rss.xml&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;FEED_RSS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;rss.xml&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;CATEGORY_FEED_RSS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;/rss.xml&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;TRANSLATION_FEED_ATOM&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;

&lt;span class="c"&gt;#Menu item&lt;/span&gt;
&lt;span class="n"&gt;MENUITEMS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Home&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;http://blog.zzfan.info/my-super-begining&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;),)&lt;/span&gt;

&lt;span class="c"&gt;# Blogroll&lt;/span&gt;
&lt;span class="c"&gt;# Social widget&lt;/span&gt;
&lt;span class="n"&gt;SOCIAL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;Github&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;http://github.com/zzfan/blog&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
          &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;Twitter&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;http://twitter.com/zzfan&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),)&lt;/span&gt;

&lt;span class="c"&gt;# Plugin&lt;/span&gt;
&lt;span class="n"&gt;PLUGIN_PATH&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;u&amp;quot;pelican-plugins&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;PLUGINS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;sitemap&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;gravatar&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;gzip_cache&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="c"&gt;# Sitemap&lt;/span&gt;
&lt;span class="n"&gt;SITEMAP&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s"&gt;&amp;quot;format&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;xml&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s"&gt;&amp;quot;priorities&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:{&lt;/span&gt;
        &lt;span class="s"&gt;&amp;quot;articles&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mf"&gt;0.7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s"&gt;&amp;quot;indexes&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s"&gt;&amp;quot;pages&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mf"&gt;0.3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="s"&gt;&amp;quot;changefreqs&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:{&lt;/span&gt;
        &lt;span class="s"&gt;&amp;quot;articles&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;monthly&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s"&gt;&amp;quot;indexes&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;daily&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s"&gt;&amp;quot;pages&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;monthly&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c"&gt;# Theme&lt;/span&gt;
&lt;span class="n"&gt;DEFAULT_PAGINATION&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;
&lt;span class="n"&gt;THEME&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;pelican-octopress-theme&amp;quot;&lt;/span&gt;

&lt;span class="c"&gt;# Disqus&lt;/span&gt;
&lt;span class="n"&gt;DISQUS_SITENAME&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;u&amp;quot;zzfanhero&amp;quot;&lt;/span&gt;

&lt;span class="c"&gt;# Uncomment following line if you want document-relative URLs when developing&lt;/span&gt;
&lt;span class="c"&gt;#RELATIVE_URLS = True&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;h4&gt;- 更改自己的域名&lt;/h4&gt;
&lt;p&gt;&lt;p&gt;
    &lt;ol&gt;
        &lt;li&gt;
            &lt;span style="line-height:1.5;"&gt;首先你得去godady上买一个域名&lt;img src="http://kindeditor.net/ke4/plugins/emoticons/images/29.gif" border="0" alt="" /&gt;&lt;/span&gt;
        &lt;/li&gt;
        &lt;li&gt;
            &lt;span style="line-height:1.5;"&gt;然后在CNAME区域加一条你定义的Blog名字&lt;/span&gt;
        &lt;/li&gt;
        &lt;li&gt;
            在你的Github中的repo中加入CNAME
        &lt;/li&gt;
        &lt;li&gt;
            CNAME中的内容是你的定义的域名
        &lt;/li&gt;
    &lt;/ol&gt;
&lt;/p&gt;&lt;/p&gt;
&lt;h4&gt;- 更改主题&lt;/h4&gt;
&lt;p&gt;这里就不过多的描述了，我自己的主题是用Octopress生成的，具体的自己去摸索很简单。&lt;br /&gt;
然后最简单的方法就是去下载了，很负责的说github上有上百个不同的&lt;a href="https://github.com/getpelican/pelican-themes"&gt;Pelican-theme&lt;/a&gt;供你选择.&lt;/p&gt;
&lt;h2&gt;后续：&lt;/h2&gt;

&lt;h3&gt;更改主题&lt;/h3&gt;

&lt;p&gt;Pelican本身提供了不少主题，同时也支持自己制作主题，你可以直接把github上pelican的主题全都clone下来&lt;/p&gt;

&lt;figure class="figure-code code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;git clone git://github.com/getpelican/pelican-themes.git
&lt;/pre&gt;&lt;/div&gt;
&lt;/figure&gt;

&lt;p&gt;在里面找到一个你喜欢的主题，假如这个主题的目录是 &lt;code&gt;~/pelican-themes/bootstrap2&lt;/code&gt; ，使用pelican-themes安装这个主题&lt;/p&gt;

&lt;figure class="figure-code code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;sudo pelican-themes -i  ~/pelican-themes/bootstrap2
&lt;/pre&gt;&lt;/div&gt;
&lt;/figure&gt;

&lt;p&gt;随后就可以用&lt;code&gt;pelican-themes&lt;/code&gt;查看已安装的主题&lt;/p&gt;

&lt;figure class="figure-code code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;pelican-themes --list --verbose
&lt;/pre&gt;&lt;/div&gt;
&lt;/figure&gt;

&lt;blockquote&gt;
&lt;p&gt;/usr/lib/python2.7/site-packages/pelican/themes/bootstrap2&lt;br&gt;&lt;br&gt;
/usr/lib/python2.7/site-packages/pelican/themes/notmyidea&lt;br&gt;&lt;br&gt;
/usr/lib/python2.7/site-packages/pelican/themes/simple  &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;要在你的博客中使用安装好的主题，直接在pelicanconf.py文件中修改或者添加&lt;code&gt;THEME&lt;/code&gt;项为想要的主题名,例如&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;THEME = "bootstrap2"&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;然后执行&lt;/p&gt;

&lt;figure class="figure-code code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;make html
&lt;/pre&gt;&lt;/div&gt;
&lt;/figure&gt;

&lt;p&gt;重新生成的页面现在使用的就是新指定的主题了&lt;/p&gt;

&lt;h3&gt;使用插件&lt;/h3&gt;

&lt;p&gt;Pelican 一开始是将插件内置的, 但是新版本 Pelican将插件隔离了出来, 所以我们要到github上 克隆一份新的插件, 在博客目录执行&lt;/p&gt;

&lt;figure class="figure-code code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;git clone git://github.com/getpelican/pelican-plugins.git 
&lt;/pre&gt;&lt;/div&gt;
&lt;/figure&gt;

&lt;p&gt;现在我们博客目录就新添了一个 pelican-plugins目录, 我们以配置sitemap插件为例,sitemap插件可以生成 sitemap.xml 供搜索引擎使用&lt;/p&gt;

&lt;p&gt;在pelicanconf.py配置文件里加上如下项:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;PLUGIN_PATH = u"pelican-plugins"&lt;br&gt;&lt;br&gt;
PLUGINS = ["sitemap"]&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;配置sitemap 插件&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;SITEMAP = { "format": "xml", "priorities": { "articles": 0.7, "indexes": 0.5, "pages": 0.3, }, "changefreqs": { "articles": "monthly", "indexes": "daily", "pages": "monthly", }}&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;然后再执行&lt;/p&gt;

&lt;figure class="figure-code code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;make html
&lt;/pre&gt;&lt;/div&gt;
&lt;/figure&gt;

&lt;p&gt;就搞定了&lt;/p&gt;

&lt;h3&gt;添加评论支持&lt;/h3&gt;

&lt;p&gt;Pelican 使用Disqus评论, 可以在Disqus上申请一个站点, 然后在pelicanconf.py里添加或修改"DISQUS_SITENAME"项的内容为你的Disqus ID :&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;DISQUS_SITENAME = u"frantic1048"&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;然后执行&lt;/p&gt;

&lt;figure class="figure-code code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;make html
&lt;/pre&gt;&lt;/div&gt;
&lt;/figure&gt;

&lt;h3&gt;拷贝静态文件&lt;/h3&gt;

&lt;p&gt;如果我们定义静态的文件, 该如何将它在每次生成的时候拷贝到 output 目录呢, 我们以robots.txt 为例, 在我们的 content/extra 下面我们放了一个定义好的 robots.txt文件, 在pelicanconf.py更改或添加&lt;code&gt;FILES_TO_COPY&lt;/code&gt;项:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;FILES_TO_COPY = ( ("extra/robots.txt", "robots.txt"),)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;这样在每次生成html的时候都会把 content/extra下的 robots.txt 拷贝到 output目录下。&lt;/p&gt;

&lt;h3&gt;拷贝静态目录&lt;/h3&gt;

&lt;p&gt;如果是一个静态目录呢?比如有个名为&lt;code&gt;img&lt;/code&gt;的目录用来放文章所使用的图片，我们可以在pelicanconf.py里添加或修改&lt;code&gt;STATIC_PATHS&lt;/code&gt;项：&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;STATIC_PATHS = [u"img"]&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;然后执行&lt;/p&gt;

&lt;figure class="figure-code code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;make html
&lt;/pre&gt;&lt;/div&gt;
&lt;/figure&gt;

&lt;p&gt;然后 Pelican 就会将&lt;code&gt;img&lt;/code&gt;目录拷贝到&lt;code&gt;output/static/&lt;/code&gt;下就大功告成了。&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;    &lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</summary><category term="blog"></category><category term="markdown"></category><category term="pelican"></category><category term="python"></category></entry><entry><title>Blog编辑器-Markdown和Html</title><link href="http://blog.zzfan.info/blogbian-ji-qi-markdownhe-html.html" rel="alternate"></link><updated>2015-04-16T00:00:00+08:00</updated><author><name>zzfan</name></author><id>tag:blog.zzfan.info,2015-04-16:blogbian-ji-qi-markdownhe-html.html</id><summary type="html">&lt;p&gt;完成了github博客的搭建（稍后会介绍如何搭建），先学习一下Markdown。
Markdown是一个将文本转化为HTML的工具，就是为了方便我们编写网页显示文章,好处就是普通的可以写成文本但是同时兼容Html。
(本文档仅在vim插件markdown中使用，其他的平台可能有一些偏差)&lt;/p&gt;
&lt;h2&gt;标题&lt;/h2&gt;
&lt;p&gt;两种方法（Setex和Atx）：
&lt;table style="width:80%;background-color:#CCCCCC;" cellpadding="2" cellspacing="0" border="1" bordercolor="#000000" align="center"&gt;
    &lt;tbody&gt;
        &lt;tr&gt;
            &lt;td style="text-align:center;"&gt;
                方式一&lt;br /&gt;
            &lt;/td&gt;
            &lt;td&gt;
                方式二
            &lt;/td&gt;
            &lt;td style="text-align:center;"&gt;
                效果&lt;br /&gt;
            &lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;
                &lt;p&gt;
                    标题一
                &lt;/p&gt;
                &lt;p&gt;
                    -------------------
                &lt;/p&gt;
                &lt;p&gt;
                    标题一
                &lt;/p&gt;
                &lt;p&gt;
                    ========
                &lt;/p&gt;
            &lt;/td&gt;
            &lt;td&gt;
                &lt;p&gt;
                    #标题一
                &lt;/p&gt;
                &lt;p&gt;
                    ##标题二
                &lt;/p&gt;
                &lt;p&gt;
                    ###标题三
                &lt;/p&gt;
            &lt;/td&gt;
            &lt;td&gt;
                &lt;h1&gt;
                    标题一
                &lt;/h1&gt;
                &lt;h2&gt;
                    标题二
                &lt;/h2&gt;
                &lt;h3&gt;
                    标题三
                &lt;/h3&gt;
            &lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;
                setex方式
            &lt;/td&gt;
            &lt;td&gt;
                atx方式
            &lt;/td&gt;
            &lt;td&gt;
                ok
            &lt;/td&gt;
        &lt;/tr&gt;
    &lt;/tbody&gt;
&lt;/table&gt;
&lt;br /&gt; 
&lt;h2&gt;换行&lt;/h2&gt;&lt;/p&gt;
&lt;p&gt;在文字的末尾使用两个或两个以上的空格来表示换行。&lt;/p&gt;

&lt;hr&gt;

&lt;h2&gt;引用&lt;/h2&gt;

&lt;p&gt;行首使用&lt;code&gt;&amp;gt;&lt;/code&gt;加上一个空格表示引用段落，内部可以嵌套多个引用。   &lt;/p&gt;

&lt;h4&gt;语法：&lt;/h4&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;code class="text language-text" data-lang="text"&gt;&amp;gt; 这是一个引用，
&amp;gt; 这里木有换行，   
&amp;gt; 在这里换行了。
&amp;gt; &amp;gt; 内部嵌套
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4&gt;效果：&lt;/h4&gt;

&lt;blockquote&gt;
&lt;p&gt;这是一个引用，
这里木有换行，&lt;br&gt;
在这里换行了。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;内部嵌套&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;

&lt;hr&gt;

&lt;h2&gt;列表&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;无序列表&lt;/strong&gt;使用&lt;code&gt;*&lt;/code&gt;、&lt;code&gt;+&lt;/code&gt;或&lt;code&gt;-&lt;/code&gt;后面加上空格来表示。  &lt;/p&gt;

&lt;h4&gt;语法：&lt;/h4&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;code class="text language-text" data-lang="text"&gt;* Item 1
* Item 2
* Item 3

+ Item 1
+ Item 2
+ Item 3

- Item 1
- Item 2
- Item 3
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4&gt;效果：&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Item 1&lt;/li&gt;
&lt;li&gt;Item 2&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Item 3&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Item 1&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Item 2&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Item 3&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Item 1  &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Item 2&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Item 3&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;有序列表&lt;/strong&gt;使用数字加英文句号加空格表示。   &lt;/p&gt;

&lt;h4&gt;语法：&lt;/h4&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;code class="text language-text" data-lang="text"&gt;1. Item 1
2. Item 2
3. Item 3
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4&gt;效果：&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;Item 1&lt;/li&gt;
&lt;li&gt;Item 2&lt;/li&gt;
&lt;li&gt;Item 3&lt;/li&gt;
&lt;/ol&gt;

&lt;hr&gt;

&lt;h2&gt;代码区域&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;行内代码&lt;/strong&gt;使用&lt;strong&gt;反斜杠&lt;/strong&gt;&lt;code&gt;`&lt;/code&gt;表示。&lt;br&gt;
&lt;strong&gt;代码段落&lt;/strong&gt;则是在每行文字前加4个空格或者1个缩进符表示。&lt;/p&gt;

&lt;h4&gt;语法：&lt;/h4&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;code class="text language-text" data-lang="text"&gt;Bash中可以使用echo来进行输出。
    $ echo &amp;#39;Something&amp;#39;
    $ echo -e &amp;#39;\tSomething\n&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4&gt;效果：&lt;/h4&gt;

&lt;p&gt;Bash中可以使用echo来进行输出。&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;code class="text language-text" data-lang="text"&gt;$ echo &amp;#39;Something&amp;#39;
$ echo -e &amp;#39;\tSomething\n&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;hr&gt;
我自己常用的方式就是"``````"&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cm"&gt;/*************************************************************************&lt;/span&gt;
&lt;span class="cm"&gt;    &amp;gt; File Name: flow-consumer1.h&lt;/span&gt;
&lt;span class="cm"&gt;    &amp;gt; Author: zzfan&lt;/span&gt;
&lt;span class="cm"&gt;    &amp;gt; Mail: zzfan@mail.ustc.edu.cn &lt;/span&gt;
&lt;span class="cm"&gt;    &amp;gt; Created Time: Thu 04 Sep 2014 03:52:53 PM HKT&lt;/span&gt;
&lt;span class="cm"&gt; ************************************************************************/&lt;/span&gt;

&lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="k"&gt;include&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;ns3/ndn-app.h&amp;quot;&lt;/span&gt;

&lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="k"&gt;include&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;ns3/ndn-app-face.h&amp;quot;&lt;/span&gt;
&lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="k"&gt;include&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;ns3/random-variable.h&amp;quot;&lt;/span&gt;

&lt;span class="n"&gt;namespace&lt;/span&gt; &lt;span class="n"&gt;ns3&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="n"&gt;FlowConsumer&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;public&lt;/span&gt; &lt;span class="n"&gt;ndn&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt; &lt;span class="n"&gt;App&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;public:&lt;/span&gt;
        &lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="n"&gt;TypeId&lt;/span&gt; &lt;span class="n"&gt;GetTypeId&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="n"&gt;StartApplication&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="n"&gt;StopApplication&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="n"&gt;OnInterest&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Ptr&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="n"&gt;ndn&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;Interest&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;interest&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="n"&gt;OnData&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Ptr&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="n"&gt;ndn&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;Data&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;contentObject&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="n"&gt;Period&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="n"&gt;SendInterest&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="k"&gt;string&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="n"&gt;SendInterest&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="n"&gt;ndn&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;Name&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="p"&gt;}&lt;/span&gt;  &lt;span class="c1"&gt;//end namespace ns3&lt;/span&gt;

 &lt;span class="c1"&gt;// #endif &lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;代码模块的编程&lt;code&gt; ndn-app.h &lt;/code&gt;可以用这个来表示.&lt;/p&gt;
&lt;h2&gt;强调&lt;/h2&gt;

&lt;p&gt;Markdown使用&lt;code&gt;\*&lt;/code&gt;或&lt;code&gt;\_&lt;/code&gt;表示强调。&lt;/p&gt;

&lt;h4&gt;语法：&lt;/h4&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;code class="text language-text" data-lang="text"&gt;单星号 = *斜体*
单下划线 = _斜体_
双星号 = **加粗**
双下划线 = __加粗__
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4&gt;效果：&lt;/h4&gt;

&lt;p&gt;单星号 = &lt;em&gt;斜体&lt;/em&gt;&lt;br&gt;
单下划线 = &lt;em&gt;斜体&lt;/em&gt;&lt;br&gt;
双星号 = &lt;strong&gt;加粗&lt;/strong&gt;&lt;br&gt;
双下划线 = &lt;strong&gt;加粗&lt;/strong&gt;  &lt;/p&gt;

&lt;hr&gt;

&lt;h2&gt;链接&lt;/h2&gt;

&lt;p&gt;Markdown支持两种风格的链接：&lt;em&gt;Inline&lt;/em&gt;和&lt;em&gt;Reference&lt;/em&gt;。 &lt;/p&gt;

&lt;h4&gt;语法：&lt;/h4&gt;

&lt;p&gt;&lt;em&gt;Inline&lt;/em&gt;：以中括号标记显示的链接文本，后面紧跟用小括号包围的链接。如果链接有title属性，则在链接中使用&lt;strong&gt;空格&lt;/strong&gt;加&lt;strong&gt;&amp;quot;title属性&amp;quot;&lt;/strong&gt;。&lt;br&gt;
&lt;em&gt;Reference&lt;/em&gt;：一般应用于多个不同位置使用相同链接。通常分为两个部分，调用部分为&lt;code&gt;[链接文本][ref]&lt;/code&gt;；定义部分可以出现在文本中的其他位置，格式为&lt;code&gt;[ref]: http://some/link/address (可选的标题)&lt;/code&gt;。&lt;br&gt;
&lt;em&gt;注：ref中不区分大小写。&lt;/em&gt;   &lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;code class="text language-text" data-lang="text"&gt;这是一个Inline[示例](http://equation85.github.com &amp;quot;可选的title&amp;quot;)。
这是一个Reference[示例][ref]。
[ref]: http://equation85.github.com
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4&gt;效果：&lt;/h4&gt;

&lt;p&gt;这是一个&lt;em&gt;Inline&lt;/em&gt;&lt;a href="http://equation85.github.com" title="可选的title"&gt;示例&lt;/a&gt;。&lt;br&gt;
这是一个&lt;em&gt;Reference&lt;/em&gt;&lt;a href="http://equation85.github.com"&gt;示例&lt;/a&gt;。&lt;/p&gt;

&lt;hr&gt;

&lt;h2&gt;图片&lt;/h2&gt;

&lt;p&gt;图片的使用方法基本上和链接类似，只是在中括号前加&lt;strong&gt;叹号&lt;/strong&gt;。&lt;br&gt;
&lt;em&gt;注：Markdown不能设置图片大小，如果必须设置则应使用HTML标记&amp;lt;img&amp;gt;。&lt;/em&gt;   &lt;/p&gt;

&lt;h4&gt;语法：&lt;/h4&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;code class="text language-text" data-lang="text"&gt;Inline示例：![替代文本](/images/test.png &amp;quot;可选的title&amp;quot;)
Reference示例：![替代文本][pic]
[pic]: /images/test.png &amp;quot;可选的title&amp;quot;
HTML示例：&amp;lt;img src=&amp;quot;/images/test.png&amp;quot; alt=&amp;quot;替代文本&amp;quot; title=&amp;quot;标题文本&amp;quot; width=&amp;quot;200&amp;quot; /&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4&gt;效果：&lt;/h4&gt;

&lt;p&gt;&lt;img src="/images/test.png" alt="替代文本" title="标题文本" width="200" /&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h2&gt;其他&lt;/h2&gt;

&lt;h4&gt;自动链接&lt;/h4&gt;

&lt;p&gt;使用&lt;strong&gt;尖括号&lt;/strong&gt;，可以为输入的URL或者邮箱自动创建链接。如&lt;a href="mailto:test@domain.com"&gt;test@domain.com&lt;/a&gt;。&lt;/p&gt;

&lt;h4&gt;分隔线&lt;/h4&gt;

&lt;p&gt;在一行中使用三个或三个以上的&lt;code&gt;*&lt;/code&gt;、&lt;code&gt;-&lt;/code&gt;或&lt;code&gt;_&lt;/code&gt;可以添加分隔线，其中可以有空白，但是不能有其他字符。&lt;/p&gt;

&lt;h4&gt;转义字符&lt;/h4&gt;

&lt;p&gt;Markdown中的转义字符为&lt;code&gt;\&lt;/code&gt;，可以转义的有：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;\\ 反斜杠&lt;/li&gt;
&lt;li&gt;\` 反引号&lt;/li&gt;
&lt;li&gt;\* 星号&lt;/li&gt;
&lt;li&gt;\_ 下划线&lt;/li&gt;
&lt;li&gt;\{\} 大括号&lt;/li&gt;
&lt;li&gt;\[\] 中括号&lt;/li&gt;
&lt;li&gt;\(\) 小括号&lt;/li&gt;
&lt;li&gt;\# 井号&lt;/li&gt;
&lt;li&gt;\+ 加号&lt;/li&gt;
&lt;li&gt;\- 减号&lt;/li&gt;
&lt;li&gt;\. 英文句号&lt;/li&gt;
&lt;li&gt;\! 感叹号&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2&gt;结语&lt;/h2&gt;

&lt;p&gt;Markdown语法很大程度上减少了编辑的成本，但是在写作这篇文章的时候也发现某些标记对中文的支持似乎并不完美，虽然这些缺陷可以通过直接插入HTML代码解决（但这么做一点都不漂亮）。总的来说，能够在离线状态下使用命令行模式进行写作还是很爽的，相比在线写作模式精力可以更专注。&lt;/p&gt;</summary><category term="code"></category><category term="markdown"></category></entry></feed>